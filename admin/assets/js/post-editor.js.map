{"version":3,"file":"post-editor.js","mappings":"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","sources":["webpack://post-to-instagram/external window [\"wp\",\"plugins\"]","webpack://post-to-instagram/external window [\"wp\",\"editor\"]","webpack://post-to-instagram/external window [\"wp\",\"i18n\"]","webpack://post-to-instagram/external window [\"wp\",\"components\"]","webpack://post-to-instagram/external window [\"wp\",\"element\"]","webpack://post-to-instagram/external window \"ReactJSXRuntime\"","webpack://post-to-instagram/./admin/assets/src/js/components/AuthPanel.js","webpack://post-to-instagram/./admin/assets/src/js/components/ImageSelectModal.js","webpack://post-to-instagram/./admin/assets/src/js/components/ReorderableImageList.js","webpack://post-to-instagram/./admin/assets/src/js/post-editor.js"],"sourcesContent":["const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"plugins\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"editor\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"i18n\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"components\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"element\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"ReactJSXRuntime\"];","import { __ } from '@wordpress/i18n';\nimport { Button, TextControl, Notice } from '@wordpress/components';\nimport { useState, useEffect } from '@wordpress/element';\n\nconst AuthPanel = ({\n    isConfigured,\n    isAuthenticated,\n    authUrl,\n    i18n,\n    isLoading,\n    onAuthStatusChange,\n    showEdit,\n    setShowEdit,\n    savedAppId,\n}) => {\n    const [appId, setAppId] = useState(savedAppId || '');\n    const [appSecret, setAppSecret] = useState('');\n    const [notice, setNotice] = useState(null);\n    const [saving, setSaving] = useState(false);\n    const [loadingAppId, setLoadingAppId] = useState(false);\n\n    // When entering edit mode, pre-fill App ID with savedAppId\n    useEffect(() => {\n        if (showEdit && savedAppId) {\n            setAppId(savedAppId);\n        }\n        if (showEdit) {\n            setAppSecret('');\n            setLoadingAppId(true);\n            wp.apiFetch({ path: 'pti/v1/auth/status', method: 'GET' })\n                .then(data => {\n                    setAppId(data.app_id || '');\n                    setLoadingAppId(false);\n                });\n        }\n    }, [showEdit, savedAppId]);\n\n    const handleSaveCredentials = () => {\n        setSaving(true);\n        setNotice(null);\n        wp.apiFetch({\n            path: 'pti/v1/auth/credentials',\n            method: 'POST',\n            data: {\n                app_id: appId,\n                app_secret: appSecret,\n            },\n        })\n            .then((response) => {\n                setSaving(false);\n                if (response.success) {\n                    setNotice({ status: 'success', message: i18n.creds_saved || 'Credentials saved.' });\n                    setAppId('');\n                    setAppSecret('');\n                    if (setShowEdit) setShowEdit(false);\n                    if (onAuthStatusChange) onAuthStatusChange();\n                } else {\n                    setNotice({ status: 'error', message: response.message || i18n.error_saving_creds || 'Error saving credentials.' });\n                }\n            })\n            .catch((error) => {\n                setSaving(false);\n                setNotice({ status: 'error', message: (error && error.message) || i18n.error_saving_creds || 'Error saving credentials.' });\n            });\n    };\n\n    // Show credentials form if not configured or editing\n    if (!isConfigured || showEdit) {\n        return (\n            <form onSubmit={e => { e.preventDefault(); handleSaveCredentials(); }}>\n                <p>{i18n.not_configured_for_auth || 'App ID and Secret are not configured.'}</p>\n                <TextControl\n                    label={i18n.app_id_label || 'Instagram App ID'}\n                    value={appId}\n                    onChange={setAppId}\n                    disabled={saving || loadingAppId}\n                    __next40pxDefaultSize={true}\n                    __nextHasNoMarginBottom={true}\n                />\n                <TextControl\n                    label={i18n.app_secret_label || 'Instagram App Secret'}\n                    value={appSecret}\n                    onChange={setAppSecret}\n                    type=\"password\"\n                    disabled={saving || loadingAppId}\n                    __next40pxDefaultSize={true}\n                    __nextHasNoMarginBottom={true}\n                />\n                <p style={{ fontSize: 'smaller', color: '#666', marginTop: 0 }}>\n                    {__('For security, the App Secret is never shown. Please re-enter it to update your credentials.', 'post-to-instagram')}\n                </p>\n                <Button\n                    isPrimary\n                    type=\"submit\"\n                    disabled={saving || !appId || !appSecret || loadingAppId}\n                >\n                    {i18n.save_credentials || 'Save Credentials'}\n                </Button>\n                {isConfigured && setShowEdit && (\n                    <Button\n                        isSecondary\n                        onClick={() => { setShowEdit(false); setNotice(null); }}\n                        disabled={saving || loadingAppId}\n                        style={{ marginLeft: 8 }}\n                    >\n                        {__('Cancel', 'post-to-instagram')}\n                    </Button>\n                )}\n                {loadingAppId && <p>{__('Loading App ID...', 'post-to-instagram')}</p>}\n                {notice && (\n                    <Notice status={notice.status} isDismissible={true} onRemove={() => setNotice(null)}>\n                        {notice.message}\n                    </Notice>\n                )}\n            </form>\n        );\n    }\n\n    // If configured and not editing, show Edit API Credentials button (handled by parent now)\n    return null;\n};\n\nexport default AuthPanel; ","import { useEffect, useRef } from '@wordpress/element';\nimport { __ } from '@wordpress/i18n';\n\nconst getImageIdsFromBlocks = () => {\n    if (!window.wp || !window.wp.data || !window.wp.data.select) return null;\n    try {\n        const blocks = window.wp.data.select('core/block-editor').getBlocks();\n        let ids = [];\n        blocks.forEach(block => {\n            if (block.name === 'core/image' && block.attributes && block.attributes.id) {\n                ids.push(block.attributes.id);\n            }\n            if (block.name === 'core/gallery' && block.attributes && Array.isArray(block.attributes.ids)) {\n                ids = ids.concat(block.attributes.ids);\n            }\n        });\n        return Array.from(new Set(ids.map(Number)));\n    } catch (e) {\n        return null;\n    }\n};\n\nconst ImageSelectModal = ({ selectedImages, setSelectedImages, postId, onClose }) => {\n    const mediaFrameRef = useRef(null);\n    // Dynamically get image IDs from the block editor, fallback to PHP-provided IDs\n    const dynamicIds = getImageIdsFromBlocks();\n    const allowedIds = (dynamicIds && dynamicIds.length)\n        ? dynamicIds\n        : (window.pti_data && window.pti_data.content_image_ids) || [];\n\n    useEffect(() => {\n        if (!window.wp || !window.wp.media) return;\n        if (!allowedIds.length) {\n            alert(__('No images found in this post. Please add images to the post content or set a featured image.', 'post-to-instagram'));\n            if (onClose) onClose();\n            return;\n        }\n        if (mediaFrameRef.current) {\n            mediaFrameRef.current.open();\n            return;\n        }\n\n        const frame = wp.media({\n            frame: 'post',\n            state: 'gallery',\n            title: __('Create gallery', 'post-to-instagram'),\n            multiple: true,\n            library: {\n                type: 'image',\n            },\n            button: { text: __('Select', 'post-to-instagram') },\n        });\n        mediaFrameRef.current = frame;\n\n        frame.on('ready', () => {\n            const state = frame.state();\n            const filters = state.get('filters');\n            if (filters && !filters.findWhere({ prop: 'ptiFilter' })) {\n                filters.add([\n                    new wp.media.model.QueryFilter({\n                        text: __('Images in this Post', 'post-to-instagram'),\n                        props: { ptiFilter: 'in_this_post' },\n                        priority: 100,\n                        filter: function(attachment) {\n                            return allowedIds.includes(attachment.id);\n                        }\n                    })\n                ]);\n            }\n            // Set default filter\n            state.set('ptiFilter', 'in_this_post');\n        });\n\n        frame.on('select', () => {\n            const selection = frame.state().get('selection');\n            const images = selection.toArray().slice(0, 10).map(att => ({\n                id: att.id,\n                url: att.get('url'),\n                alt: att.get('alt'),\n                width: att.get('width'),\n                height: att.get('height'),\n            }));\n            setSelectedImages(images);\n            if (onClose) onClose();\n        });\n        frame.on('open', () => {\n            const selection = frame.state().get('selection');\n            selection.reset();\n            if (selectedImages && selectedImages.length) {\n                const attachments = selectedImages.map(img => wp.media.attachment(img.id));\n                attachments.forEach(att => selection.add(att));\n            }\n        });\n        frame.on('close', () => {\n            if (onClose) onClose();\n        });\n        frame.open();\n        // Cleanup on unmount\n        return () => {\n            if (mediaFrameRef.current) {\n                mediaFrameRef.current.off('select');\n                mediaFrameRef.current.off('open');\n                mediaFrameRef.current.off('close');\n                mediaFrameRef.current.off('ready');\n                mediaFrameRef.current = null;\n            }\n        };\n    }, [allowedIds && allowedIds.join(',')]);\n    return null; // This component does not render anything itself\n};\n\nexport default ImageSelectModal; ","import { useRef } from '@wordpress/element';\n\nconst getAspectRatioStyle = (aspectRatio) => ({\n    width: 48,\n    height: 48 / aspectRatio,\n    objectFit: 'cover',\n    borderRadius: 4,\n    border: '1px solid #ccc',\n    cursor: 'pointer',\n    background: '#fff',\n});\n\nconst ReorderableImageList = ({ images, setImages, aspectRatio, onPreview }) => {\n    const dragItem = useRef();\n    const dragOverItem = useRef();\n\n    const handleDragStart = (index) => {\n        dragItem.current = index;\n    };\n    const handleDragEnter = (index) => {\n        dragOverItem.current = index;\n    };\n    const handleDragEnd = () => {\n        const from = dragItem.current;\n        const to = dragOverItem.current;\n        if (from === undefined || to === undefined || from === to) return;\n        const updated = [...images];\n        const [moved] = updated.splice(from, 1);\n        updated.splice(to, 0, moved);\n        setImages(updated);\n        dragItem.current = undefined;\n        dragOverItem.current = undefined;\n    };\n    if (!images.length) return null;\n    return (\n        <div style={{ display: 'flex', flexWrap: 'wrap', gap: 8, marginTop: 8 }}>\n            {images.map((img, i) => (\n                <img\n                    key={img.id}\n                    src={img.url}\n                    alt={img.alt || ''}\n                    style={getAspectRatioStyle(aspectRatio)}\n                    draggable\n                    onDragStart={() => handleDragStart(i)}\n                    onDragEnter={() => handleDragEnter(i)}\n                    onDragEnd={handleDragEnd}\n                    onClick={() => onPreview && onPreview(i)}\n                    title=\"Drag to reorder. Click to preview.\"\n                />\n            ))}\n        </div>\n    );\n};\n\nexport default ReorderableImageList; ","import { registerPlugin } from '@wordpress/plugins';\nimport { PluginSidebar, PluginSidebarMoreMenuItem } from '@wordpress/editor'; // Corrected import\nimport { __ } from '@wordpress/i18n';\nimport { PanelBody, Button } from '@wordpress/components';\nimport { Fragment, useState, useEffect, useRef } from '@wordpress/element';\nimport AuthPanel from './components/AuthPanel';\nimport ImageSelectModal from './components/ImageSelectModal';\nimport ReorderableImageList from './components/ReorderableImageList';\n\nconst PTI_ICON = 'instagram'; // Placeholder, can be replaced with a custom SVG icon component\n\nconst PostToInstagramPluginSidebar = () => {\n    // Destructure pti_data passed from PHP\n    const {\n        is_configured: initialIsConfigured,\n        is_authenticated: initialIsAuthenticated,\n        auth_url: initialAuthUrl,\n        i18n,\n        auth_redirect_status,\n        app_id: initialAppId,\n        post_id: postId\n    } = pti_data;\n\n    const [isConfigured, setIsConfigured] = useState(initialIsConfigured);\n    const [isAuthenticated, setIsAuthenticated] = useState(initialIsAuthenticated);\n    const [authUrl, setAuthUrl] = useState(initialAuthUrl);\n    const [isLoading, setIsLoading] = useState(true); // Start with loading true for initial check\n    const [showEdit, setShowEdit] = useState(false);\n    const [savedAppId, setSavedAppId] = useState(initialAppId || '');\n    const [selectedImages, setSelectedImages] = useState([]);\n    const [showImageModal, setShowImageModal] = useState(false);\n    const [previewIndex, setPreviewIndex] = useState(null);\n\n    // Calculate aspect ratio of the first image\n    const aspectRatio = selectedImages.length > 0 && selectedImages[0].url && selectedImages[0].id\n        ? (() => {\n            // Try to get width/height from the media library if available\n            const img = selectedImages[0];\n            if (img.width && img.height) return img.width / img.height;\n            // Fallback: assume square\n            return 1;\n        })()\n        : 1;\n\n    const handlePreview = (index) => setPreviewIndex(index);\n    const closePreview = () => setPreviewIndex(null);\n\n    // Function to check authentication status via REST API\n    const checkAuthStatus = (showAlerts = false) => {\n        setIsLoading(true);\n        wp.apiFetch({\n            path: 'pti/v1/auth/status', // Correct path for wp.apiFetch (namespace/route)\n            method: 'GET',\n        })\n        .then((data) => {\n            setIsConfigured(data.is_configured);\n            setIsAuthenticated(data.is_authenticated);\n            setAuthUrl(data.auth_url || '#');\n            setSavedAppId(data.app_id || '');\n            setIsLoading(false);\n            if (showAlerts && data.is_authenticated) {\n                // For better UX, consider using WordPress notices:\n                // wp.data.dispatch('core/notices').createNotice('success', i18n.auth_successful || 'Authenticated!', { isDismissible: true });\n            }\n        })\n        .catch((error) => {\n            setIsLoading(false);\n            console.error('Error checking auth status:', error);\n            if (showAlerts) {\n                // wp.data.dispatch('core/notices').createNotice('error', i18n.generic_auth_error || 'Error checking status.', { isDismissible: true });\n                alert(i18n.generic_auth_error || 'Error checking authentication status.');\n            }\n        });\n    };\n\n    // Handle messages from OAuth window\n    useEffect(() => {\n        const handleAuthMessage = (event) => {\n            // IMPORTANT: Add origin check for security in a real application\n            // if (event.origin !== window.location.origin) { /* console.warn('Message from untrusted origin'); return; */ }\n            if (event.data && event.data.type === 'pti_auth_complete') {\n                if (event.data.success) {\n                    checkAuthStatus(true); // Re-fetch status from server\n                     if (window.oauthWindow && !window.oauthWindow.closed) {\n                        window.oauthWindow.close();\n                    }\n                } else {\n                    alert(i18n.auth_failed + (event.data.message ? '\\\\n' + event.data.message : ''));\n                }\n            }\n        };\n        window.addEventListener('message', handleAuthMessage);\n        return () => window.removeEventListener('message', handleAuthMessage);\n    }, [i18n]); // i18n might change if site language changes, good to include\n\n    // Effect to handle auth redirect status from URL query params\n    useEffect(() => {\n        if (auth_redirect_status) {\n            if (auth_redirect_status === 'success') {\n                checkAuthStatus(true);\n            } else {\n                let errorMessage = i18n.auth_failed;\n                if (i18n[auth_redirect_status]) {\n                   errorMessage = i18n[auth_redirect_status];\n                } else if (auth_redirect_status !== '1') { // Avoid showing \" (Details: 1)\"\n                   errorMessage += ` (Details: ${auth_redirect_status})`;\n                }\n                alert(errorMessage);\n            }\n            // Clean the URL query parameters\n            if (window.history.replaceState) {\n                const currentUrl = new URL(window.location.href);\n                currentUrl.searchParams.delete('pti_auth_success');\n                currentUrl.searchParams.delete('pti_auth_error');\n                window.history.replaceState({ path: currentUrl.href }, '', currentUrl.href);\n            }\n        }\n    }, [auth_redirect_status, i18n]);\n\n    const handleConnectInstagram = () => {\n        if (!isConfigured) {\n            alert(i18n.not_configured_for_auth || 'App not configured.');\n            return;\n        }\n        if (authUrl && authUrl !== '#') {\n            window.oauthWindow = window.open(authUrl, 'ptiOAuthConnect', 'width=600,height=700');\n            const timer = setInterval(() => {\n                if (window.oauthWindow && window.oauthWindow.closed) {\n                    clearInterval(timer);\n                    console.log('OAuth window closed by user or completed, re-checking auth status.');\n                    checkAuthStatus(true);\n                }\n            }, 1000);\n        } else {\n            alert(i18n.generic_auth_error || 'Authentication URL not available.');\n        }\n    };\n    \n    // Initial status check when component mounts\n    useEffect(() => {\n        checkAuthStatus();\n    }, []); // Empty dependency array ensures this runs only once on mount\n\n    // Handler to open the WP media modal for image selection\n    const openMediaModal = () => setShowImageModal(true);\n\n    let panelContent;\n\n    if (isLoading) {\n        panelContent = <p>{__('Loading status...', 'post-to-instagram')}</p>;\n    } else if (!isConfigured || showEdit) {\n        panelContent = (\n            <AuthPanel\n                isConfigured={isConfigured}\n                isAuthenticated={isAuthenticated}\n                authUrl={authUrl}\n                i18n={i18n}\n                isLoading={isLoading}\n                onAuthStatusChange={checkAuthStatus}\n                showEdit={showEdit}\n                setShowEdit={setShowEdit}\n                savedAppId={savedAppId}\n            />\n        );\n    } else if (!isAuthenticated) {\n        panelContent = (\n            <Fragment>\n                <p>{__('Connect your Instagram account to start posting.', 'post-to-instagram')}</p>\n                <Button isPrimary onClick={handleConnectInstagram} disabled={isLoading || authUrl === '#'}>\n                    {i18n.connect_instagram || 'Connect to Instagram'}\n                </Button>\n                <Button isSecondary onClick={() => setShowEdit(true)} style={{ marginLeft: 8 }}>\n                    {__('Edit API Credentials', 'post-to-instagram')}\n                </Button>\n            </Fragment>\n        );\n    } else {\n        panelContent = (\n            <Fragment>\n                <p>{__('Ready to post to Instagram!', 'post-to-instagram')}</p>\n                <Button isPrimary onClick={openMediaModal}>\n                    {i18n.select_images || 'Select Images'}\n                </Button>\n                {/* Cropping notice */}\n                <div style={{ margin: '8px 0', color: '#b26a00', fontSize: 12 }}>\n                    {__(\"All images will be cropped to match the aspect ratio of the first image in your selection, per Instagram's requirements.\", 'post-to-instagram')}\n                </div>\n                {/* Drag-and-drop reordering and preview */}\n                <ReorderableImageList\n                    images={selectedImages}\n                    setImages={setSelectedImages}\n                    aspectRatio={aspectRatio}\n                    onPreview={handlePreview}\n                />\n                {/* Placeholder for ImagePreviewModal */}\n                {previewIndex !== null && (\n                    <div style={{ marginTop: 12, color: '#888' }}>\n                        {__('(Image preview modal coming soon)', 'post-to-instagram')}\n                    </div>\n                )}\n                <Button isSecondary onClick={() => alert('Disconnect TBD')} style={{ marginLeft: 8 }}>\n                    {i18n.disconnect_instagram || 'Disconnect'}\n                </Button>\n                {/* ImageSelectModal is rendered conditionally */}\n                {showImageModal && (\n                    <ImageSelectModal\n                        selectedImages={selectedImages}\n                        setSelectedImages={setSelectedImages}\n                        postId={postId}\n                        onClose={() => setShowImageModal(false)}\n                    />\n                )}\n            </Fragment>\n        );\n    }\n\n    return (\n        <Fragment>\n            <PluginSidebarMoreMenuItem\n                target=\"post-to-instagram-sidebar\"\n                icon={PTI_ICON}\n            >\n                {i18n.post_to_instagram || 'Post to Instagram'}\n            </PluginSidebarMoreMenuItem>\n            <PluginSidebar\n                name=\"post-to-instagram-sidebar\"\n                title={i18n.post_to_instagram || 'Post to Instagram'}\n                icon={PTI_ICON}\n            >\n                <PanelBody>\n                    {panelContent}\n                </PanelBody>\n            </PluginSidebar>\n        </Fragment>\n    );\n};\n\nregisterPlugin('post-to-instagram', {\n    render: PostToInstagramPluginSidebar,\n    icon: PTI_ICON,\n}); "],"names":["window","AuthPanel","isConfigured","isAuthenticated","authUrl","i18n","isLoading","onAuthStatusChange","showEdit","setShowEdit","savedAppId","appId","setAppId","useState","appSecret","setAppSecret","notice","setNotice","saving","setSaving","loadingAppId","setLoadingAppId","useEffect","wp","apiFetch","path","method","then","data","app_id","_jsxs","onSubmit","e","preventDefault","app_secret","response","success","status","message","creds_saved","error_saving_creds","catch","error","children","_jsx","not_configured_for_auth","TextControl","label","app_id_label","value","onChange","disabled","__next40pxDefaultSize","__nextHasNoMarginBottom","app_secret_label","type","style","fontSize","color","marginTop","__","Button","isPrimary","save_credentials","isSecondary","onClick","marginLeft","Notice","isDismissible","onRemove","ImageSelectModal","selectedImages","setSelectedImages","postId","onClose","mediaFrameRef","useRef","dynamicIds","getImageIdsFromBlocks","select","blocks","getBlocks","ids","forEach","block","name","attributes","id","push","Array","isArray","concat","from","Set","map","Number","allowedIds","length","pti_data","content_image_ids","media","alert","current","open","frame","state","title","multiple","library","button","text","on","filters","get","findWhere","prop","add","model","QueryFilter","props","ptiFilter","priority","filter","attachment","includes","set","images","toArray","slice","att","url","alt","width","height","selection","reset","img","off","join","getAspectRatioStyle","aspectRatio","objectFit","borderRadius","border","cursor","background","ReorderableImageList","setImages","onPreview","dragItem","dragOverItem","handleDragEnd","to","undefined","updated","moved","splice","display","flexWrap","gap","i","src","draggable","onDragStart","handleDragStart","index","onDragEnter","handleDragEnter","onDragEnd","PTI_ICON","registerPlugin","render","PostToInstagramPluginSidebar","is_configured","initialIsConfigured","is_authenticated","initialIsAuthenticated","auth_url","initialAuthUrl","auth_redirect_status","initialAppId","post_id","setIsConfigured","setIsAuthenticated","setAuthUrl","setIsLoading","setSavedAppId","showImageModal","setShowImageModal","previewIndex","setPreviewIndex","checkAuthStatus","showAlerts","console","generic_auth_error","handleAuthMessage","event","oauthWindow","closed","close","auth_failed","addEventListener","removeEventListener","errorMessage","history","replaceState","currentUrl","URL","location","href","searchParams","delete","panelContent","Fragment","openMediaModal","select_images","margin","disconnect_instagram","handleConnectInstagram","timer","setInterval","clearInterval","log","connect_instagram","PluginSidebarMoreMenuItem","target","icon","post_to_instagram","PluginSidebar","PanelBody"],"sourceRoot":""}