{"version":3,"file":"post-editor.js","mappings":"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","sources":["webpack://post-to-instagram/external window [\"wp\",\"plugins\"]","webpack://post-to-instagram/external window [\"wp\",\"editor\"]","webpack://post-to-instagram/external window [\"wp\",\"i18n\"]","webpack://post-to-instagram/external window [\"wp\",\"components\"]","webpack://post-to-instagram/external window [\"wp\",\"element\"]","webpack://post-to-instagram/external window \"ReactJSXRuntime\"","webpack://post-to-instagram/./admin/assets/src/js/components/AuthPanel.js","webpack://post-to-instagram/./admin/assets/src/js/components/CustomImageSelectModal.js","webpack://post-to-instagram/./admin/assets/src/js/components/ReorderableImageList.js","webpack://post-to-instagram/external window [\"wp\",\"notices\"]","webpack://post-to-instagram/./admin/assets/src/js/post-editor.js","webpack://post-to-instagram/./admin/assets/src/js/utils/getPostImageIds.js"],"sourcesContent":["const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"plugins\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"editor\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"i18n\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"components\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"element\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"ReactJSXRuntime\"];","import { __ } from '@wordpress/i18n';\nimport { Button, TextControl, Notice } from '@wordpress/components';\nimport { useState, useEffect } from '@wordpress/element';\n\nconst AuthPanel = ({\n    isConfigured,\n    isAuthenticated,\n    authUrl,\n    i18n,\n    isLoading,\n    onAuthStatusChange,\n    showEdit,\n    setShowEdit,\n    savedAppId,\n}) => {\n    const [appId, setAppId] = useState(savedAppId || '');\n    const [appSecret, setAppSecret] = useState('');\n    const [notice, setNotice] = useState(null);\n    const [saving, setSaving] = useState(false);\n    const [loadingAppId, setLoadingAppId] = useState(false);\n\n    // When entering edit mode, pre-fill App ID with savedAppId\n    useEffect(() => {\n        if (showEdit && savedAppId) {\n            setAppId(savedAppId);\n        }\n        if (showEdit) {\n            setAppSecret('');\n            setLoadingAppId(true);\n            wp.apiFetch({ path: 'pti/v1/auth/status', method: 'GET' })\n                .then(data => {\n                    setAppId(data.app_id || '');\n                    setLoadingAppId(false);\n                });\n        }\n    }, [showEdit, savedAppId]);\n\n    const handleSaveCredentials = () => {\n        setSaving(true);\n        setNotice(null);\n        wp.apiFetch({\n            path: 'pti/v1/auth/credentials',\n            method: 'POST',\n            data: {\n                app_id: appId,\n                app_secret: appSecret,\n            },\n        })\n            .then((response) => {\n                setSaving(false);\n                if (response.success) {\n                    setNotice({ status: 'success', message: i18n.creds_saved || 'Credentials saved.' });\n                    setAppId('');\n                    setAppSecret('');\n                    if (setShowEdit) setShowEdit(false);\n                    if (onAuthStatusChange) onAuthStatusChange();\n                } else {\n                    setNotice({ status: 'error', message: response.message || i18n.error_saving_creds || 'Error saving credentials.' });\n                }\n            })\n            .catch((error) => {\n                setSaving(false);\n                setNotice({ status: 'error', message: (error && error.message) || i18n.error_saving_creds || 'Error saving credentials.' });\n            });\n    };\n\n    // Show credentials form if not configured or editing\n    if (!isConfigured || showEdit) {\n        return (\n            <form onSubmit={e => { e.preventDefault(); handleSaveCredentials(); }}>\n                <p>{i18n.not_configured_for_auth || 'App ID and Secret are not configured.'}</p>\n                <TextControl\n                    label={i18n.app_id_label || 'Instagram App ID'}\n                    value={appId}\n                    onChange={setAppId}\n                    disabled={saving || loadingAppId}\n                    __next40pxDefaultSize={true}\n                    __nextHasNoMarginBottom={true}\n                />\n                <TextControl\n                    label={i18n.app_secret_label || 'Instagram App Secret'}\n                    value={appSecret}\n                    onChange={setAppSecret}\n                    type=\"password\"\n                    disabled={saving || loadingAppId}\n                    __next40pxDefaultSize={true}\n                    __nextHasNoMarginBottom={true}\n                />\n                <p style={{ fontSize: 'smaller', color: '#666', marginTop: 0 }}>\n                    {__('For security, the App Secret is never shown. Leave blank to keep the current secret.', 'post-to-instagram')}\n                </p>\n                <Button\n                    isPrimary\n                    type=\"submit\"\n                    disabled={saving || !appId || loadingAppId}\n                >\n                    {i18n.save_credentials || 'Save Credentials'}\n                </Button>\n                {isConfigured && setShowEdit && (\n                    <Button\n                        isSecondary\n                        onClick={() => { setShowEdit(false); setNotice(null); }}\n                        disabled={saving || loadingAppId}\n                        style={{ marginLeft: 8 }}\n                    >\n                        {__('Cancel', 'post-to-instagram')}\n                    </Button>\n                )}\n                {loadingAppId && <p>{__('Loading App ID...', 'post-to-instagram')}</p>}\n                {notice && (\n                    <Notice status={notice.status} isDismissible={true} onRemove={() => setNotice(null)}>\n                        {notice.message}\n                    </Notice>\n                )}\n            </form>\n        );\n    }\n\n    // If configured and not editing, show Edit API Credentials button (handled by parent now)\n    return null;\n};\n\nexport default AuthPanel; ","import { useState, useEffect } from '@wordpress/element';\nimport { Modal, Button, Card, CardMedia, CardBody, Spinner, Notice, CheckboxControl } from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\n\nconst fetchImagesByIds = async (ids) => {\n    if (!ids.length) return [];\n    const params = ids.map(id => `include[]=${id}`).join('&');\n    const resp = await fetch(`/wp-json/wp/v2/media?per_page=100&${params}`);\n    if (!resp.ok) return [];\n    return await resp.json();\n};\n\nconst CustomImageSelectModal = ({\n    allowedIds = window.pti_data && Array.isArray(window.pti_data.content_image_ids) ? window.pti_data.content_image_ids : [],\n    selectedImages = [],\n    setSelectedImages,\n    onClose,\n    maxSelect = 10,\n}) => {\n    const [images, setImages] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n    const [selected, setSelected] = useState(selectedImages.map(img => img.id));\n    const [notice, setNotice] = useState(null);\n    const [includePosted, setIncludePosted] = useState(false);\n    const sharedImageIds = (window.pti_data && Array.isArray(window.pti_data.shared_image_ids)) ? window.pti_data.shared_image_ids : [];\n\n    useEffect(() => {\n        setLoading(true);\n        fetchImagesByIds(allowedIds)\n            .then(data => {\n                setImages(data);\n                setLoading(false);\n            })\n            .catch(() => {\n                setError(__('Failed to load images.', 'post-to-instagram'));\n                setLoading(false);\n            });\n    }, [allowedIds && allowedIds.join(',')]);\n\n    // Filter images based on includePosted\n    const filteredImages = includePosted\n        ? images\n        : images.filter(img => !sharedImageIds.includes(img.id));\n\n    const handleToggle = (id) => {\n        if (selected.includes(id)) {\n            setSelected(selected.filter(sid => sid !== id));\n        } else {\n            if (selected.length >= maxSelect) {\n                setNotice({ status: 'error', message: __('You can select a maximum of 10 images.', 'post-to-instagram') });\n                return;\n            }\n            setSelected([...selected, id]);\n        }\n    };\n\n    const handleSelect = () => {\n        const selectedImgs = images.filter(img => selected.includes(img.id)).map(img => ({\n            id: img.id,\n            url: img.source_url,\n            alt: img.alt_text,\n            width: img.media_details?.width,\n            height: img.media_details?.height,\n        }));\n        setSelectedImages(selectedImgs);\n        if (onClose) onClose();\n    };\n\n    return (\n        <Modal\n            title={__('Select Images for Instagram', 'post-to-instagram')}\n            onRequestClose={onClose}\n            shouldCloseOnClickOutside={false}\n        >\n            <CheckboxControl\n                label={__('Include already posted images', 'post-to-instagram')}\n                checked={includePosted}\n                onChange={setIncludePosted}\n                __nextHasNoMarginBottom={true}\n            />\n            {loading && <Spinner />}\n            {error && <Notice status=\"error\" isDismissible={false}>{error}</Notice>}\n            {notice && (\n                <Notice status={notice.status} isDismissible={true} onRemove={() => setNotice(null)}>\n                    {notice.message}\n                </Notice>\n            )}\n            {!loading && !error && (\n                <div className=\"pti-image-grid\">\n                    {filteredImages.map(img => {\n                        const isPosted = sharedImageIds.includes(img.id);\n                        const isSelected = selected.includes(img.id);\n                        const orderIndex = isSelected ? selected.indexOf(img.id) : -1;\n                        return (\n                            <Card\n                                key={img.id}\n                                isSelected={isSelected}\n                                onClick={() => handleToggle(img.id)}\n                                className={`pti-image-card${isSelected ? ' pti-image-card--selected' : ''}`}\n                            >\n                                <CardMedia>\n                                    <img\n                                        src={img.media_details?.sizes?.thumbnail?.source_url || img.source_url}\n                                        alt={img.alt_text || ''}\n                                        className=\"pti-image-card-img\"\n                                    />\n                                    {isPosted && (\n                                        <span className=\"pti-image-card-posted\">\n                                            {__('Posted', 'post-to-instagram')}\n                                        </span>\n                                    )}\n                                    {isSelected && (\n                                        <span className=\"pti-image-card-selected\">\n                                            {`${orderIndex + 1}/${maxSelect}`}\n                                        </span>\n                                    )}\n                                </CardMedia>\n                            </Card>\n                        );\n                    })}\n                </div>\n            )}\n            <div style={{ display: 'flex', justifyContent: 'flex-end', gap: 8 }}>\n                <Button isSecondary onClick={onClose}>{__('Cancel', 'post-to-instagram')}</Button>\n                <Button isPrimary onClick={handleSelect} disabled={!selected.length}>\n                    {__('Select', 'post-to-instagram')}\n                </Button>\n            </div>\n        </Modal>\n    );\n};\n\nexport default CustomImageSelectModal; ","import { useRef } from '@wordpress/element';\n\nconst getAspectRatioStyle = (aspectRatio) => ({\n    width: 48,\n    height: 48 / aspectRatio,\n    objectFit: 'cover',\n    borderRadius: 4,\n    border: '1px solid #ccc',\n    cursor: 'pointer',\n    background: '#fff',\n});\n\nconst ReorderableImageList = ({ images, setImages, aspectRatio, onPreview }) => {\n    const dragItem = useRef();\n    const dragOverItem = useRef();\n\n    const handleDragStart = (index) => {\n        dragItem.current = index;\n    };\n    const handleDragEnter = (index) => {\n        dragOverItem.current = index;\n    };\n    const handleDragEnd = () => {\n        const from = dragItem.current;\n        const to = dragOverItem.current;\n        if (from === undefined || to === undefined || from === to) return;\n        const updated = [...images];\n        const [moved] = updated.splice(from, 1);\n        updated.splice(to, 0, moved);\n        setImages(updated);\n        dragItem.current = undefined;\n        dragOverItem.current = undefined;\n    };\n    if (!images.length) return null;\n    return (\n        <div style={{ display: 'flex', flexWrap: 'wrap', gap: 8, marginTop: 8 }}>\n            {images.map((img, i) => (\n                <img\n                    key={img.id}\n                    src={img.url}\n                    alt={img.alt || ''}\n                    style={getAspectRatioStyle(aspectRatio)}\n                    draggable\n                    onDragStart={() => handleDragStart(i)}\n                    onDragEnter={() => handleDragEnter(i)}\n                    onDragEnd={handleDragEnd}\n                    onClick={() => onPreview && onPreview(i)}\n                    title=\"Drag to reorder. Click to preview.\"\n                />\n            ))}\n        </div>\n    );\n};\n\nexport default ReorderableImageList; ","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"notices\"];","import { registerPlugin } from '@wordpress/plugins';\nimport { PluginSidebar, PluginSidebarMoreMenuItem } from '@wordpress/editor'; // Corrected import\nimport { __ } from '@wordpress/i18n';\nimport { PanelBody, Button } from '@wordpress/components';\nimport { Fragment, useState, useEffect, useRef } from '@wordpress/element';\nimport AuthPanel from './components/AuthPanel';\nimport CustomImageSelectModal from './components/CustomImageSelectModal';\nimport ReorderableImageList from './components/ReorderableImageList';\nimport { getPostImageIds } from './utils/getPostImageIds';\nimport { createNotice } from '@wordpress/notices';\n\nconst PTI_ICON = 'instagram'; // Placeholder, can be replaced with a custom SVG icon component\n\nconst PostToInstagramPluginSidebar = () => {\n    // Destructure pti_data passed from PHP\n    const {\n        is_configured: initialIsConfigured,\n        is_authenticated: initialIsAuthenticated,\n        auth_url: initialAuthUrl,\n        i18n,\n        auth_redirect_status,\n        app_id: initialAppId,\n        post_id: postId,\n        username: initialUsername\n    } = pti_data;\n\n    const [isConfigured, setIsConfigured] = useState(initialIsConfigured);\n    const [isAuthenticated, setIsAuthenticated] = useState(initialIsAuthenticated);\n    const [authUrl, setAuthUrl] = useState(initialAuthUrl);\n    const [isLoading, setIsLoading] = useState(true); // Start with loading true for initial check\n    const [showEdit, setShowEdit] = useState(false);\n    const [savedAppId, setSavedAppId] = useState(initialAppId || '');\n    const [selectedImages, setSelectedImages] = useState([]);\n    const [showImageModal, setShowImageModal] = useState(false);\n    const [previewIndex, setPreviewIndex] = useState(null);\n    const [allowedIds, setAllowedIds] = useState([]);\n    const [caption, setCaption] = useState('');\n    const [posting, setPosting] = useState(false);\n    const [disconnecting, setDisconnecting] = useState(false);\n    const [username, setUsername] = useState(initialUsername || null);\n\n    // Calculate aspect ratio of the first image\n    const aspectRatio = selectedImages.length > 0 && selectedImages[0].url && selectedImages[0].id\n        ? (() => {\n            // Try to get width/height from the media library if available\n            const img = selectedImages[0];\n            if (img.width && img.height) return img.width / img.height;\n            // Fallback: assume square\n            return 1;\n        })()\n        : 1;\n\n    const handlePreview = (index) => setPreviewIndex(index);\n    const closePreview = () => setPreviewIndex(null);\n\n    // Function to check authentication status via REST API\n    const checkAuthStatus = (showAlerts = false) => {\n        setIsLoading(true);\n        wp.apiFetch({\n            path: 'pti/v1/auth/status', // Correct path for wp.apiFetch (namespace/route)\n            method: 'GET',\n        })\n        .then((data) => {\n            setIsConfigured(data.is_configured);\n            setIsAuthenticated(data.is_authenticated);\n            setAuthUrl(data.auth_url || '#');\n            setSavedAppId(data.app_id || '');\n            setUsername(data.username || null);\n            setIsLoading(false);\n            if (showAlerts && data.is_authenticated) {\n                // For better UX, consider using WordPress notices:\n                // wp.data.dispatch('core/notices').createNotice('success', i18n.auth_successful || 'Authenticated!', { isDismissible: true });\n            }\n        })\n        .catch((error) => {\n            setIsLoading(false);\n            console.error('Error checking auth status:', error);\n            if (showAlerts) {\n                // wp.data.dispatch('core/notices').createNotice('error', i18n.generic_auth_error || 'Error checking status.', { isDismissible: true });\n                alert(i18n.generic_auth_error || 'Error checking authentication status.');\n            }\n        });\n    };\n\n    // Handle messages from OAuth window\n    useEffect(() => {\n        const handleAuthMessage = (event) => {\n            // IMPORTANT: Add origin check for security in a real application\n            // if (event.origin !== window.location.origin) { /* console.warn('Message from untrusted origin'); return; */ }\n            if (event.data && event.data.type === 'pti_auth_complete') {\n                if (event.data.success) {\n                    checkAuthStatus(true); // Re-fetch status from server\n                     if (window.oauthWindow && !window.oauthWindow.closed) {\n                        window.oauthWindow.close();\n                    }\n                } else {\n                    alert(i18n.auth_failed + (event.data.message ? '\\\\n' + event.data.message : ''));\n                }\n            }\n        };\n        window.addEventListener('message', handleAuthMessage);\n        return () => window.removeEventListener('message', handleAuthMessage);\n    }, [i18n]); // i18n might change if site language changes, good to include\n\n    // Effect to handle auth redirect status from URL query params\n    useEffect(() => {\n        if (auth_redirect_status) {\n            if (auth_redirect_status === 'success') {\n                checkAuthStatus(true);\n            } else {\n                let errorMessage = i18n.auth_failed;\n                if (i18n[auth_redirect_status]) {\n                   errorMessage = i18n[auth_redirect_status];\n                } else if (auth_redirect_status !== '1') { // Avoid showing \" (Details: 1)\"\n                   errorMessage += ` (Details: ${auth_redirect_status})`;\n                }\n                alert(errorMessage);\n            }\n            // Clean the URL query parameters\n            if (window.history.replaceState) {\n                const currentUrl = new URL(window.location.href);\n                currentUrl.searchParams.delete('pti_auth_success');\n                currentUrl.searchParams.delete('pti_auth_error');\n                window.history.replaceState({ path: currentUrl.href }, '', currentUrl.href);\n            }\n        }\n    }, [auth_redirect_status, i18n]);\n\n    const handleConnectInstagram = () => {\n        if (!isConfigured) {\n            alert(i18n.not_configured_for_auth || 'App not configured.');\n            return;\n        }\n        if (authUrl && authUrl !== '#') {\n            window.oauthWindow = window.open(authUrl, 'ptiOAuthConnect', 'width=600,height=700');\n            const timer = setInterval(() => {\n                if (window.oauthWindow && window.oauthWindow.closed) {\n                    clearInterval(timer);\n                    console.log('OAuth window closed by user or completed, re-checking auth status.');\n                    checkAuthStatus(true);\n                }\n            }, 1000);\n        } else {\n            alert(i18n.generic_auth_error || 'Authentication URL not available.');\n        }\n    };\n    \n    // Initial status check when component mounts\n    useEffect(() => {\n        checkAuthStatus();\n    }, []); // Empty dependency array ensures this runs only once on mount\n\n    // Handler to open the custom image modal for image selection\n    const openMediaModal = () => {\n        setAllowedIds(getPostImageIds());\n        setShowImageModal(true);\n    };\n\n    // Handler for Post Now\n    const handlePostNow = async () => {\n        if (!selectedImages.length) return;\n        setPosting(true);\n        try {\n            const response = await wp.apiFetch({\n                path: '/pti/v1/post-now',\n                method: 'POST',\n                data: {\n                    post_id: postId,\n                    image_ids: selectedImages.map(img => img.id),\n                    caption,\n                    _wpnonce: pti_data.nonce_post_media, // Localized in PHP\n                },\n            });\n            setPosting(false);\n            if (response && response.success) {\n                setSelectedImages([]);\n                setCaption('');\n                wp.data.dispatch('core/notices').createNotice('success', __('Posted to Instagram successfully!', 'post-to-instagram'), { isDismissible: true });\n            } else {\n                wp.data.dispatch('core/notices').createNotice('error', response && response.message ? response.message : __('Failed to post to Instagram.', 'post-to-instagram'), { isDismissible: true });\n            }\n        } catch (e) {\n            setPosting(false);\n            wp.data.dispatch('core/notices').createNotice('error', __('Error posting to Instagram.', 'post-to-instagram'), { isDismissible: true });\n        }\n    };\n\n    const handleDisconnect = async () => {\n        if (!window.confirm(i18n.disconnect_instagram || 'Disconnect Instagram Account?')) return;\n        setDisconnecting(true);\n        try {\n            const response = await wp.apiFetch({\n                path: '/pti/v1/disconnect',\n                method: 'POST',\n                data: { _wpnonce: pti_data.nonce_disconnect },\n            });\n            setDisconnecting(false);\n            if (response && response.success) {\n                wp.data.dispatch('core/notices').createNotice('success', i18n.disconnected || 'Account disconnected.', { isDismissible: true });\n                checkAuthStatus();\n            } else {\n                wp.data.dispatch('core/notices').createNotice('error', response && response.message ? response.message : (i18n.error_disconnecting || 'Error disconnecting account.'), { isDismissible: true });\n            }\n        } catch (e) {\n            setDisconnecting(false);\n            wp.data.dispatch('core/notices').createNotice('error', i18n.error_disconnecting || 'Error disconnecting account.', { isDismissible: true });\n        }\n    };\n\n    let panelContent;\n\n    if (isLoading) {\n        panelContent = <p>{__('Loading status...', 'post-to-instagram')}</p>;\n    } else if (!isConfigured || showEdit) {\n        panelContent = (\n            <AuthPanel\n                isConfigured={isConfigured}\n                isAuthenticated={isAuthenticated}\n                authUrl={authUrl}\n                i18n={i18n}\n                isLoading={isLoading}\n                onAuthStatusChange={checkAuthStatus}\n                showEdit={showEdit}\n                setShowEdit={setShowEdit}\n                savedAppId={savedAppId}\n            />\n        );\n    } else if (!isAuthenticated) {\n        panelContent = (\n            <Fragment>\n                <p>{__('Connect your Instagram account to start posting.', 'post-to-instagram')}</p>\n                <Button isPrimary onClick={handleConnectInstagram} disabled={isLoading || authUrl === '#'}>\n                    {i18n.connect_instagram || 'Connect to Instagram'}\n                </Button>\n                <Button isSecondary onClick={() => setShowEdit(true)} style={{ marginLeft: 8 }}>\n                    {__('Edit API Credentials', 'post-to-instagram')}\n                </Button>\n            </Fragment>\n        );\n    } else {\n        panelContent = (\n            <Fragment>\n                <p>{__('Ready to post to Instagram!', 'post-to-instagram')}</p>\n                <Button isPrimary onClick={openMediaModal}>\n                    {i18n.select_images || 'Select Images'}\n                </Button>\n                {/* Cropping notice */}\n                <div className=\"pti-cropping-notice\">\n                    {__(\"All images will be cropped to match the aspect ratio of the first image in your selection, per Instagram's requirements.\", 'post-to-instagram')}\n                </div>\n                {/* Drag-and-drop reordering and preview */}\n                <ReorderableImageList\n                    images={selectedImages}\n                    setImages={setSelectedImages}\n                    aspectRatio={aspectRatio}\n                    onPreview={handlePreview}\n                />\n                {/* Caption input, only show if images are selected */}\n                {selectedImages.length > 0 && (\n                    <div className=\"pti-caption-box\">\n                        <label className=\"pti-caption-label\">\n                            {__('Instagram Caption', 'post-to-instagram')}\n                        </label>\n                        <textarea\n                            className=\"pti-caption-input\"\n                            value={caption}\n                            onChange={e => setCaption(e.target.value)}\n                            rows={4}\n                            placeholder={__('Write your Instagram caption here...', 'post-to-instagram')}\n                        />\n                        {/* Post Now / Schedule Post buttons */}\n                        <div className=\"pti-post-actions\">\n                            <Button isPrimary onClick={handlePostNow} disabled={posting}>\n                                {posting ? __('Posting...', 'post-to-instagram') : __('Post Now', 'post-to-instagram')}\n                            </Button>\n                            <Button isSecondary>{__('Schedule Post', 'post-to-instagram')}</Button>\n                        </div>\n                    </div>\n                )}\n                {/* Placeholder for ImagePreviewModal */}\n                {previewIndex !== null && (\n                    <div className=\"pti-preview-placeholder\">\n                        {__('(Image preview modal coming soon)', 'post-to-instagram')}\n                    </div>\n                )}\n                {/* CustomImageSelectModal is rendered conditionally */}\n                {showImageModal && (\n                    <CustomImageSelectModal\n                        allowedIds={allowedIds}\n                        selectedImages={selectedImages}\n                        setSelectedImages={setSelectedImages}\n                        onClose={() => setShowImageModal(false)}\n                        maxSelect={10}\n                    />\n                )}\n            </Fragment>\n        );\n    }\n\n    return (\n        <Fragment>\n            <PluginSidebarMoreMenuItem\n                target=\"post-to-instagram-sidebar\"\n                icon={PTI_ICON}\n            >\n                {i18n.post_to_instagram || 'Post to Instagram'}\n            </PluginSidebarMoreMenuItem>\n            <PluginSidebar\n                name=\"post-to-instagram-sidebar\"\n                title={i18n.post_to_instagram || 'Post to Instagram'}\n                icon={PTI_ICON}\n            >\n                <PanelBody>\n                    {panelContent}\n                </PanelBody>\n                {/* Move Disconnect button to the bottom of the sidebar, only if authenticated */}\n                {isAuthenticated && (\n                <div className=\"pti-disconnect-bottom\">\n                        {username && (\n                            <div className=\"pti-account-info\" style={{ marginBottom: 8, color: '#666', fontSize: 'smaller' }}>\n                                {__('Connected Instagram account:', 'post-to-instagram')} <strong>@{username}</strong>\n                            </div>\n                        )}\n                    <Button isSecondary onClick={handleDisconnect} disabled={disconnecting}>\n                        {disconnecting ? __('Disconnecting...', 'post-to-instagram') : (i18n.disconnect_instagram || 'Disconnect')}\n                    </Button>\n                </div>\n                )}\n            </PluginSidebar>\n        </Fragment>\n    );\n};\n\nregisterPlugin('post-to-instagram', {\n    render: PostToInstagramPluginSidebar,\n    icon: PTI_ICON,\n}); ","// Returns a unique array of all image IDs in the current post (including nested blocks, galleries, and featured image)\nexport function getPostImageIds() {\n    if (!window.wp || !window.wp.data || !window.wp.data.select) return [];\n    try {\n        const blocks = window.wp.data.select('core/block-editor').getBlocks();\n        let ids = [];\n        const walkBlocks = (blockList) => {\n            blockList.forEach(block => {\n                if (block.name === 'core/image' && block.attributes && block.attributes.id) {\n                    ids.push(Number(block.attributes.id));\n                }\n                if (block.name === 'core/gallery' && block.attributes && Array.isArray(block.attributes.ids)) {\n                    ids.push(...block.attributes.ids.map(Number));\n                }\n                if (block.innerBlocks && block.innerBlocks.length) {\n                    walkBlocks(block.innerBlocks);\n                }\n            });\n        };\n        walkBlocks(blocks);\n        // Add featured image\n        const featuredId = window.wp.data.select('core/editor').getEditedPostAttribute('featured_media');\n        if (featuredId && !ids.includes(Number(featuredId))) {\n            ids.push(Number(featuredId));\n        }\n        return Array.from(new Set(ids.filter(Boolean)));\n    } catch (e) {\n        return [];\n    }\n} "],"names":["window","AuthPanel","isConfigured","isAuthenticated","authUrl","i18n","isLoading","onAuthStatusChange","showEdit","setShowEdit","savedAppId","appId","setAppId","useState","appSecret","setAppSecret","notice","setNotice","saving","setSaving","loadingAppId","setLoadingAppId","useEffect","wp","apiFetch","path","method","then","data","app_id","_jsxs","onSubmit","e","preventDefault","app_secret","response","success","status","message","creds_saved","error_saving_creds","catch","error","children","_jsx","not_configured_for_auth","TextControl","label","app_id_label","value","onChange","disabled","__next40pxDefaultSize","__nextHasNoMarginBottom","app_secret_label","type","style","fontSize","color","marginTop","__","Button","isPrimary","save_credentials","isSecondary","onClick","marginLeft","Notice","isDismissible","onRemove","CustomImageSelectModal","allowedIds","pti_data","Array","isArray","content_image_ids","selectedImages","setSelectedImages","onClose","maxSelect","images","setImages","loading","setLoading","setError","selected","setSelected","map","img","id","includePosted","setIncludePosted","sharedImageIds","shared_image_ids","async","ids","length","params","join","resp","fetch","ok","json","fetchImagesByIds","filteredImages","filter","includes","Modal","title","onRequestClose","shouldCloseOnClickOutside","CheckboxControl","checked","Spinner","className","isPosted","isSelected","orderIndex","indexOf","Card","sid","handleToggle","CardMedia","src","media_details","sizes","thumbnail","source_url","alt","alt_text","display","justifyContent","gap","handleSelect","selectedImgs","url","width","height","getAspectRatioStyle","aspectRatio","objectFit","borderRadius","border","cursor","background","ReorderableImageList","onPreview","dragItem","useRef","dragOverItem","handleDragEnd","from","current","to","undefined","updated","moved","splice","flexWrap","i","draggable","onDragStart","handleDragStart","index","onDragEnter","handleDragEnter","onDragEnd","PTI_ICON","registerPlugin","render","PostToInstagramPluginSidebar","is_configured","initialIsConfigured","is_authenticated","initialIsAuthenticated","auth_url","initialAuthUrl","auth_redirect_status","initialAppId","post_id","postId","username","initialUsername","setIsConfigured","setIsAuthenticated","setAuthUrl","setIsLoading","setSavedAppId","showImageModal","setShowImageModal","previewIndex","setPreviewIndex","setAllowedIds","caption","setCaption","posting","setPosting","disconnecting","setDisconnecting","setUsername","checkAuthStatus","showAlerts","console","alert","generic_auth_error","handleAuthMessage","event","oauthWindow","closed","close","auth_failed","addEventListener","removeEventListener","errorMessage","history","replaceState","currentUrl","URL","location","href","searchParams","delete","panelContent","Fragment","openMediaModal","select","blocks","getBlocks","walkBlocks","blockList","forEach","block","name","attributes","push","Number","innerBlocks","featuredId","getEditedPostAttribute","Set","Boolean","getPostImageIds","select_images","target","rows","placeholder","image_ids","_wpnonce","nonce_post_media","dispatch","createNotice","handleConnectInstagram","open","timer","setInterval","clearInterval","log","connect_instagram","PluginSidebarMoreMenuItem","icon","post_to_instagram","PluginSidebar","PanelBody","marginBottom","confirm","disconnect_instagram","nonce_disconnect","disconnected","error_disconnecting"],"sourceRoot":""}